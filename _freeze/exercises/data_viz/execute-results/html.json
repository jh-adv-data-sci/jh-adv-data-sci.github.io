{
  "hash": "148d558dc5cadd3c7a7f6676c75063d4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Visualization\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    code-fold: true\n    code-summary: \"Show answer\"\n    df-print: paged\nparams:\n  show_answers: true # Set to false to hide all answer code but still render figures\nexecute:\n  freeze: auto\n  echo: true\n  warning: false\n  message: false\n---\n\n\n\n::: callout-tip\n## How to render with/without answers\n\n- **With answers (default)**: `quarto render viz-handout.qmd`\n- **Without answers** (figures only): `quarto render viz-handout.qmd -P show_answers:false`\n:::\n\n\n\n\n\n\n\n# 1) Distribution: Histogram + Density Overlay (Diamonds)\nYou are given `ggplot2::diamonds` (>50k rows). Create a histogram of **price** (restrict to \\$10,000 or less for visibility), overlay a scaled density curve so both share a comparable y-scale, and style axes and labels.\n\n**Requirements**\n\n- Filter to `price <= 10000`.\n- Histogram with a **binwidth of 250**.\n- Overlay a **density** where `y = after_stat(count) * 250` so peaks align with histogram counts.\n- Label axes and apply a dollar formatter to x-axis.\n- Use `theme_bw()` and a concise title/subtitle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\nlibrary(ggplot2)\n\np1 <- diamonds |>\n  filter(price <= 10000) |>\n  ggplot(aes(price)) +\n  geom_histogram(binwidth = 250, boundary = 0, closed = \"left\", color = \"white\") +\n  geom_density(aes(y = after_stat(count) * 250), linewidth = 1, alpha = 0.15, fill = NA) +\n  scale_x_continuous(labels = scales::dollar_format(accuracy = 1)) +\n  labs(\n    title = \"Diamond Prices (≤ $10k)\",\n    subtitle = \"Histogram with density overlay scaled to counts\",\n    x = \"Price (USD)\", y = \"Count\"\n  ) +\n  theme(legend.position = \"none\")\n\np1\n```\n\n::: {.cell-output-display}\n![Histogram and scaled density of diamond prices (≤ $10k).](data_viz_files/figure-html/fig-diamonds-price-1.png){#fig-diamonds-price width=672}\n:::\n:::\n\n\n\n---\n\n# 1.1) Make the above graph better \n\n--- \n\n\n# 2) Bivariate: Scatter with LOESS Trend + Facets (MPG)\nUsing `ggplot2::mpg`, visualize **highway mileage (hwy)** vs **engine displacement (displ)**, colored by **class**. Add a LOESS smooth and facet by **drive (drv)**.\n\n**Requirements**\n\n- `geom_point(alpha = 0.6)` and `geom_smooth(se = FALSE, method = \"loess\")`.\n- Axis limits: `y` from 10 to 45.\n- Facet by `drv` with `facet_wrap(~ drv, nrow = 1)`.\n- Place legend at the bottom.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\nmpg |>\n  ggplot(aes(displ, hwy, color = class)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(se = FALSE, method = \"loess\") +\n  scale_y_continuous(limits = c(10, 45), breaks = seq(10, 45, 5)) +\n  labs(\n    title = \"Fuel Economy by Engine Size\",\n    subtitle = \"LOESS trends by vehicle class\",\n    x = \"Engine displacement (L)\", y = \"Highway MPG\"\n  ) +\n  facet_wrap(~ drv, nrow = 1) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![Highway MPG vs. engine displacement, colored by class, faceted by drive (mpg).](data_viz_files/figure-html/fig-mpg-scatter-1.png){#fig-mpg-scatter width=672}\n:::\n:::\n\n\n---\n\n\n# 2.1) Make the above graph better \n\n--- \n\n# 3) Small Multiples: Facet Wrap by Class (MPG)\nProduce small multiples of **hwy vs displ** but facet by **class** to compare patterns across vehicle classes.\n\n**Requirements**\n\n- Same base mapping as above; facet by `class` (`ncol = 4`).\n- Use a consistent y-scale.\n- Add a translucent linear fit per panel (`method = \"lm\"`).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\nmpg |>\n  ggplot(aes(displ, hwy)) +\n  geom_point(alpha = 0.6, color = \"grey30\") +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 0.8, alpha = 0.9) +\n  scale_y_continuous(limits = c(10, 45), breaks = seq(10, 45, 5)) +\n  labs(\n    title = \"Fuel Economy vs Engine Size by Vehicle Class\",\n    x = \"Engine displacement (L)\", y = \"Highway MPG\"\n  ) +\n  facet_wrap(~ class, ncol = 4)\n```\n\n::: {.cell-output-display}\n![Small multiples of hwy vs displ by vehicle class (linear fits).](data_viz_files/figure-html/fig-mpg-facets-1.png){#fig-mpg-facets width=768}\n:::\n:::\n\n\n---\n\n\n# 3.1) Make the above graph better \n\n--- \n\n# 4) Time Series: Unemployment Rate with 12-Month Moving Average (economics)\nUsing `ggplot2::economics`, compute the **unemployment rate** as `100 * unemploy / pop`. Plot the monthly rate and a 12-month moving average.\n\n**Requirements**\n\n- Create `urate = 100 * unemploy / pop`.\n- Compute a 12-month moving average using `stats::filter`.\n- Plot `urate` as a faint line and overlay the moving average as a thicker line.\n- Limit the x-axis to 1970–2010 for focus.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\nlibrary(stats)\n\neconomics |>\n  mutate(\n    urate = 100 * unemploy / pop,\n    ma12 = as.numeric(stats::filter(urate, rep(1/12, 12), sides = 1))\n  ) |>\n  filter(date >= as.Date(\"1970-01-01\"), date <= as.Date(\"2010-12-31\")) |>\n  ggplot(aes(date, urate)) +\n  geom_line(alpha = 0.4) +\n  geom_line(aes(y = ma12), linewidth = 1) +\n  labs(\n    title = \"US Unemployment Rate\",\n    subtitle = \"Monthly values with 12-month moving average\",\n    x = NULL, y = \"Percent\"\n  )\n```\n\n::: {.cell-output-display}\n![US unemployment rate with 12-month moving average (1970–2010).](data_viz_files/figure-html/fig-economics-ma-1.png){#fig-economics-ma width=672}\n:::\n:::\n\n\n---\n\n\n# 5) Distribution by Group: Violin + Box + Jitter (iris)\nUsing `datasets::iris`, compare **Sepal.Length** by **Species** with violins, embedded boxplots, and jittered points. Reorder species by median sepal length.\n\n**Requirements**\n\n- Reorder x-axis by median `Sepal.Length`.\n- Use `geom_violin(trim = FALSE, alpha = 0.3)` + `geom_boxplot(width = 0.1, outlier.shape = NA)`.\n- Add `geom_jitter(width = 0.1, alpha = 0.5, size = 0.8)`.\n- Hide the fill legend and label clearly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\niris |>\n  as_tibble() |>\n  mutate(Species = fct_reorder(Species, Sepal.Length, .fun = median)) |>\n  ggplot(aes(Species, Sepal.Length, fill = Species)) +\n  geom_violin(trim = FALSE, alpha = 0.3) +\n  geom_boxplot(width = 0.1, outlier.shape = NA) +\n  geom_jitter(width = 0.1, alpha = 0.5, size = 0.8) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Sepal Length by Species\",\n    x = NULL, y = \"Sepal length (cm)\"\n  )\n```\n\n::: {.cell-output-display}\n![Sepal length distributions by species (iris).](data_viz_files/figure-html/fig-iris-violin-1.png){#fig-iris-violin width=624}\n:::\n:::\n\n\n\n---\n\n# 5.1) Make the above graph better \n\n--- \n\n# 6) Correlation Heatmap with Clustering (mtcars)\nCompute a **Spearman correlation matrix** for numeric variables in `mtcars`, cluster variables, and display a heatmap with correlation values.\n\n**Requirements**\n\n- Compute Spearman correlations on numeric columns.\n- Order variables using hierarchical clustering on `1 - r`.\n- Use `geom_tile()` and `scale_fill_gradient2()` with limits `c(-1, 1)`.\n- Add rounded correlation labels.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\nnum <- mtcars |> select(where(is.numeric))\nR <- cor(num, method = \"spearman\", use = \"pairwise.complete.obs\")\nord <- hclust(as.dist(1 - R))$order\nlvl <- colnames(R)[ord]\n\ncorr_df <- as.data.frame(R) |>\n  rownames_to_column(\"var1\") |>\n  pivot_longer(-var1, names_to = \"var2\", values_to = \"r\") |>\n  mutate(\n    var1 = factor(var1, levels = lvl),\n    var2 = factor(var2, levels = lvl)\n  )\n\nggplot(corr_df, aes(var2, var1, fill = r)) +\n  geom_tile() +\n  geom_text(aes(label = sprintf(\"%.2f\", r)), size = 3) +\n  scale_fill_gradient2(limits = c(-1, 1)) +\n  coord_fixed() +\n  labs(x = NULL, y = NULL, fill = \"rho\",\n       title = \"Spearman Correlation (mtcars)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![Spearman correlation heatmap with hierarchical clustering (mtcars).](data_viz_files/figure-html/fig-mtcars-corr-1.png){#fig-mtcars-corr width=672}\n:::\n:::\n\n\n---\n\n\n# 6.1) Make the above graph better \n\n--- \n\n\n# 7) Tile Heatmap: Housing Prices by Month × Year (txhousing)\nUsing `ggplot2::txhousing`, create a month × year **heatmap** of median home prices for **Austin**.\n\n**Requirements**\n\n- Filter city to `\"Austin\"`.\n- Limit years to 2000–2015.\n- Y-axis should be month (Jan–Dec).\n- Fill tiles by `median` (median sales price).\n- Add a readable color scale and labels.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show answer code\"}\n# subset and prepare month labels\nau <- txhousing |>\n  filter(city == \"Austin\", year >= 2000, year <= 2015) |>\n  mutate(Month = factor(month, levels = 1:12, labels = month.abb))\n\nggplot(au, aes(year, Month, fill = median)) +\n  geom_tile() +\n  scale_fill_gradient(labels = scales::dollar, name = \"Median price\") +\n  scale_x_continuous(breaks = seq(2000, 2015, by = 3)) +\n  labs(\n    title = \"Austin Housing — Median Price by Month and Year\",\n    x = NULL, y = NULL\n  ) +\n  theme(legend.position = \"right\")\n```\n\n::: {.cell-output-display}\n![Median home price (Austin): month × year heatmap (txhousing).](data_viz_files/figure-html/fig-txhousing-heatmap-1.png){#fig-txhousing-heatmap width=720}\n:::\n:::\n\n\n# 7.1) Make the above graph better \n\n--- \n\n\n\n## Appendix: Session Info (hidden)\n\n\n\n",
    "supporting": [
      "data_viz_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}